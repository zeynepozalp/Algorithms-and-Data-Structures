vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int, int> counts;
        vector<int> res;
        int l=nums.size();
        for(int i=0; i<l; i++){
            counts[nums[i]]++;
        }
        priority_queue<pair<int, int>> pq;
        for(auto p : counts){
            pq.push(make_pair(p.second, p.first));
        }
        for(int i = 0; i < k; i++){
            res.push_back(pq.top().second);
            pq.pop();
        }
        sort(res.begin(),res.end());
        return res;
    }